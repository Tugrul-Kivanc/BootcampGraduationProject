@model ShoppingListDetail

@{
    ViewData["Title"] = "Add Product";
}

<h1>Add Product</h1>

<h4>ShoppingListDetail</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddProduct">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ShoppingListId" value="@Url.ActionContext.RouteData.Values["listId"]" />
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <select asp-for="ProductId" asp-items="ViewBag.Products" class="form-control">
                    <option value="0">Select a Product</option>
                </select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @*TODO return to list with its id*@
    <a asp-action="ListDetails">Back to List</a>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
